name: Test, Build and Push Docker Image

on:
  push:
    branches:
      - main
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  build-and-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2 
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_DB_NAME: ${{ secrets.DB_NAME }}
        envkey_DB_USER: ${{ secrets.DB_USER }}
        envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        envkey_DB_HOST: ${{ secrets.DB_HOST }}
        envkey_DB_PORT: ${{ secrets.DB_PORT }}
        envkey_DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        envkey_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        envkey_CLIENT_ID: ${{ secrets.CLIENT_ID }}
        envkey_MERCHANT_ID: ${{ secrets.MERCHANT_ID }}
        envkey_PUBLIC_TOKEN: ${{ secrets.PUBLIC_TOKEN }}
        envkey_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    - name: Build and push Docker image
      run: |
        BUILD_ARGS=$(cat .env | awk -F= '{printf("--build-arg %s=%s ", $1, $2)}')
        docker build $BUILD_ARG -t lambda-docker-image -t ${{ steps.login-ecr.outputs.registry }}/quicker-api:${{ github.sha }} -t ${{ steps.login-ecr.outputs.registry }}/quicker-api:latest .
        docker push ${{ steps.login-ecr.outputs.registry }}/quicker-api:latest
    - name: Deploy SAM application
      run: |
        sam deploy --template-file template.yaml --stack-name quicker-api --capabilities CAPABILITY_IAM --parameter-overrides LambdaImageUri=$LAMBDA_IMAGE_URI --image-repository $LAMBDA_IMAGE_URI --no-fail-on-empty-changeset
      env:
        LAMBDA_IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/quicker-api:latest
    - name: Update Lambda function code
      run: |
        aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --image-uri $LAMBDA_IMAGE_URI
      env:
        LAMBDA_FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }}
        LAMBDA_IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/quicker-api:latest