name: Test, Build and Push Docker Image

on:
  push:
    branches:
      - master # or the branch you want to trigger the workflow
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x # Replace with the desired Python version

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt 
        pip3 install coverage
        
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_USE_SQLITE: true
    - name: Run tests & coverage
      run: |
        coverage run --source='.' --omit='*/tests/*' --omit='*/tests/*'  manage.py test
        coverage report


  build-and-push:
    needs: test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2 
      with:
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_DB_NAME: ${{ secrets.DB_NAME }}
        envkey_DB_USER: ${{ secrets.DB_USER }}
        envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        envkey_DB_HOST: ${{ secrets.DB_HOST }}
        envkey_DB_PORT: ${{ secrets.DB_PORT }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: . 
        push: true
        tags: | 
          ${{ steps.login-ecr.outputs.registry }}/quicker-api:${{ github.sha }}
          ${{ steps.login-ecr.outputs.registry }}/quicker-api:latest
        build-args: |
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}

          




